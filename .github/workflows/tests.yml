name: tests

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        db: [sqlite, postgres]
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: adventorator
          POSTGRES_PASSWORD: adventorator
          POSTGRES_DB: adventorator
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U adventorator -d adventorator"
          --health-interval 5s
          --health-timeout 3s
          --health-retries 10
        # Only needed when matrix.db == 'postgres'; harmless otherwise
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .
      - name: Prepare database (Postgres only)
        if: matrix.db == 'postgres'
        env:
          PGPASSWORD: adventorator
          DATABASE_URL: postgresql+asyncpg://adventorator:adventorator@localhost:5432/adventorator
        run: |
          # Create a separate test DB if desired (optional)
          psql -h localhost -U adventorator -d adventorator -c 'SELECT 1;' || true
          # Apply migrations using sync psycopg driver via Alembic env.py
          PYTHONPATH=./src alembic upgrade head
      - name: Run tests (matrix)
        env:
          ENV: dev
          DISCORD_PUBLIC_KEY: dummy
          DATABASE_URL: ${{ matrix.db == 'postgres' && 'postgresql+asyncpg://adventorator:adventorator@localhost:5432/adventorator' || 'sqlite+aiosqlite:///./adventorator_test.sqlite3' }}
        run: |
          pytest -q
